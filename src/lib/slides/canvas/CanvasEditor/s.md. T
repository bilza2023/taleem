
look at this ToolBar.svelte component. This is a toolbar that i use in my app however i have noticed that the component is too much merged/mixed with the app. a component should not know about the app. this way i can use the same form ot tool bar every where.

here are my comments:

 1. this toolbar should not import anything. Not Required
     import Icons  from "../icons"; 
    import {SlideObject} from "../../index";
    const ItemsMap = SlideObject.Canvas.ItemsMap;

2. it should export let 1 function 
        "export let callBack"; //or any other suitable name 

3 . it should export let an array of objects in this format (each item has data for 1 toolbar button). This part can be a seperate toolbar called ToolBarCallbackWithArgs.svelte

    [
        {
            icon: '‚è±Ô∏è',
            payload : "rectangle"
            title: 'Rectangle
        }
    ]

and this item is converted into 

<SmallBtnToolbar clk={()=>callBack('rectangle')} icon='‚è±Ô∏è' title="Rectangle" />

4: This part of the Toolbar should be a seperate toolbar since the way it call callbacks is different (it does not use ()=>). We can call it ToolBarCallback.svelte

        <div class='flex border-2 border-gray-500 rounded-md'>
        <SmallBtnToolbar clk={clone} icon={icons.SHEEP} title="Clone" />
        <SmallBtnToolbar clk={showCanvas} icon={icons.CANVAS} title="Canvas" />
        <SmallBtnToolbar clk={deleteFn} icon={icons.WASTEBASKET} title="Delete" />
        </div>

5: Actually we should have a ToolbarDiv.svelte which is just a toolbar div and can take slots and then we can  have 2 toolbars inside the slots 


the code Toolbar.svelte

<script>
    //@ts-nocheck

    import { SmallBtnToolbar } from "sveltetools_bils/src/cmp"; 
    import Icons  from "../icons"; 
    import {SlideObject} from "../../index";

const ItemsMap = SlideObject.Canvas.ItemsMap;


    let icons = Icons;
    export let clone=()=>{};
    export let deleteFn=()=>{};
    export let showCanvas=()=>{};

export let addNewItem;


</script>
<div class="flex justify-between text-white ">

<div class="flex text-white ">
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('rectangle').data())} icon={icons.RECTANGLE} title="Rect" />

<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('ellipse').data())} icon={icons.ELLIPSE} title="Ellipse" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('circle').data())} icon={icons.ELLIPSE} title="Circle" />
<!-- <SmallBtnToolbar clk={()=>addNewItem(SlideObject.canvas.CanvasItemsDefaultItemExtras.text())} icon={icons.TEXT} title="Text" /> -->
<SmallBtnToolbar clk={()=>addNewItem( ItemsMap.get('text').data() )} icon={icons.TEXT} title="Text" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('list').data() ) } icon={icons.TEMPLATE} title="List" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('line').data() ) } icon={icons.LINE} title="Line" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('triangle').data())} icon={icons.TRIANGE} title="Tri" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('ray').data())} icon={icons.SUNRISE} title="Ray" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('icon').data())} icon='ü¶è' title="Icon" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('dot').data())} icon={icons.DOT} title="Dot" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('angle').data())} icon={icons.ANGLE} title="Angle" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('lines').data())} icon={icons.BICYCLE} title="Lines" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('sprite').data())} icon={icons.SPRITE} title="Sprite" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('image').data())} icon={icons.MAP} title="Image" />
<SmallBtnToolbar clk={()=>addNewItem(ItemsMap.get('piechart').data())} icon={icons.PIZZA} title="Pie" />
</div>
            
            
<div class='flex border-2 border-gray-500 rounded-md'>
<SmallBtnToolbar clk={clone} icon={icons.SHEEP} title="Clone" />
<SmallBtnToolbar clk={showCanvas} icon={icons.CANVAS} title="Canvas" />
<SmallBtnToolbar clk={deleteFn} icon={icons.WASTEBASKET} title="Delete" />
</div>

</div>